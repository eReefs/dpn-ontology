# Disable implicit content negotiation
# (Because we are about to define explicit rules for it)
Options -MultiViews 

# Handle Favicon requests first, before manipulating any other URLs....
RewriteCond  %{REQUEST_URI}  favicon.ico
RewriteCond  "%{ENV:FAVICON_URL}"  ^http
RewriteRule  ^.*$ ${FAVICON_URL}  [P,L]

RewriteCond %{REQUEST_URI}  favicon.ico
RewriteCond "%{ENV:FAVICON_URL}"  !^$
RewriteRule ^.*$ "%{ENV:FAVICON_URL}" [END]

# Handle URLs that are generated by the reverse-proxied LODE application (if any)
# (these also need to be reverse-proxied to the LODE server)
RewriteCond  "%{ENV:LODE_BASEURL}"  ^http
RewriteRule  ^.*(extract|source|client/[^/]+)$  $1  [P,L]

# Derive a variable that can be used to ensure any redirects properly
# respect any X-Forwarded- headers passed with this request
RewriteRule (.*) - [E=BASEURL:%{ENV:ENDPOINT}]

RewriteCond %{HTTP:X-Forwarded-Proto}  !^$
RewriteCond %{HTTP:X-Forwarded-Host}  !^$
RewriteRule (.*) - [E=BASEURL:%{HTTP:X-Forwarded-Proto}://%{HTTP:X-Forwarded-Host}%{ENV:ENDPOINT}]

# If there is a recognised directory-path that is NOT the prefix,
# Redirect to a URL with sections in the correct order
RewriteRule  ^(.+)/(v\d[\.\d]*|current|latest)/?(.*)/?$  "%{ENV:BASEURL}/$2/$1$3"  [R=303,L]

# If nothing is requested, or *only* a recognised directory-path is requested,
# redirect to the top-level dpn namespace: this acts as the directory index.
RewriteRule  ^(v\d[\.\d]*|current|latest)?/?$  "%{ENV:BASEURL}/$1/dpn"  [R=303,L]

# Redirect purl.org-style dpn/dataset and dpn/services paths to dpn-dataset and dpn-services
RewriteRule  ^(.*)dpn/(dataset|services)(.*)$  "%{ENV:BASEURL}/$1dpn-$2$3" [R=303,L]

# If there is no recognised directory-path in the url,
# Or if the directory path is `current` AND a current version
# has been configured via an environment variable, then
# alias (rather than redirect) to the configured current version
RewriteCond  "%{ENV:CURRENT_VERSION}"  !^$
RewriteRule  ^(dpn(-dataset|-services).*)$  "%{ENV:CURRENT_VERSION}/$1" [PT]

RewriteCond  "%{ENV:CURRENT_VERSION}"  !^$
RewriteRule  ^current/(.*)$  "%{ENV:CURRENT_VERSION}/$1"  [PT]

# For requests that now match an actual file-path exactly: serve that file
RewriteCond  %{REQUEST_FILENAME}  -d [OR]
RewriteCond  %{REQUEST_FILENAME}  -f [OR]
RewriteCond  %{REQUEST_FILENAME}  -l
RewriteRule  ^.*$  -  [END]

# For extensionless file requests of the DPN ontology files,
# Derive the file expension that best matches the requested
# MIME type, and attempt to serve that up.

# text/turtle => serve the .ttl file if it exists
RewriteCond  %{REQUEST_URI}  dpn(-dataset|-services)?$
RewriteCond  %{HTTP_ACCEPT}  text/turtle
RewriteCond  %{REQUEST_FILENAME}.ttl -f [OR]
RewriteCond  %{REQUEST_FILENAME}.ttl -l
RewriteRule  ^(.*)$  $1.ttl [T=text/turtle,END]

# text/html, application/xhtml+xml => serve the .htm file if it exists
RewriteCond  %{REQUEST_URI}  dpn(-dataset|-services)?$
RewriteCond  %{HTTP_ACCEPT}  text/html [OR]
RewriteCond  %{HTTP_ACCEPT}  application/xhtml\+xml
RewriteCond  %{REQUEST_FILENAME}.htm -f [OR]
RewriteCond  %{REQUEST_FILENAME}.htm -l
RewriteRule  ^(.*)$  $1.htm [T=text/html,END]

# text/html, application/xhtml+xml => Reverse proxy to LODE, if that is configured
RewriteCond  %{REQUEST_URI}  dpn(-dataset|-services)?$
RewriteCond  %{HTTP_ACCEPT}  text/html [OR]
RewriteCond  %{HTTP_ACCEPT}  application/xhtml\+xml
RewriteCond  "%{ENV:LODE_BASEURL}"  ^http
RewriteRule  ^(.*)$  "%{ENV:LODE_BASEURL}/extract?module=owlapi&url=%{ENV:BASEURL}/$1.ttl"  [R=303,T=text/html,L]

# Any other extensionless requests => Try to serve up the RDF
# (It's the default because it renders in the browser, 
# unlike text/turtle, which defaults to downloading)
RewriteCond  %{REQUEST_URI}  dpn(-dataset|-services)?$
RewriteRule  ^(.*)$  $1.rdf  [R=303,T=application/rdf+xml,END]
